on:
  push:
    branches-ignore:
      - "develop"
      - "master"

env:
  GO_VERSION: "1.16"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - 
        name: "Checkout"
        uses: actions/checkout@v2
      - 
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - 
        name: "Pull dependencies"
        run: go mod vendor
      - 
        name: "Unit tests"
        run: make test
      - 
        name: "Linter"
        run: make lint

  version:
    name: Version
    concurrency: tagging
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Calculate semver tag
        id: semver-tag
        uses: wakatime/semver-action@v1.3.2
        with:
          prerelease_id: alpha
          main_branch_name: release
      - name: Create tag
        uses: actions/github-script@v4
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.semver-tag.outputs.semver_tag }}",
              sha: context.sha
            })
      - 
        shell: bash
        run: |
          echo ${{ steps.semver-tag.outputs.semver_tag }} > version.txt
          echo ${{ steps.semver-tag.outputs.ancestor_tag }} >> version.txt
          echo ${{ steps.semver-tag.outputs.is_prerelease }} >> version.txt
      -
        name: Upload version
        uses: actions/upload-artifact@v2
        with:
          name: version.txt
          path: version.txt
  
  build:
    name: Build
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    needs: [version]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Setup go
        uses: actions/setup-go@master
        with:
          go-version: "1.16"
      -
        name: Download version
        uses: actions/download-artifact@v2
        with:
          name: version.txt
      -
        name: Build binaries
        shell: bash
        env:
          VERSION: $(head -1 version.txt)
        run: make build-all
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: build/
      - 
        name: Remove tag if failure
        if: ${{ failure() }}
        uses: actions/github-script@v4
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/$(head -1 version.txt)",
            })

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      -
        name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Download version
        uses: actions/download-artifact@v2
        with:
          name: version.txt
      -
        name: Changelog
        uses: gandarez/changelog-action@v1.0.4
        id: changelog
        with:
          current_tag: ${{ github.sha }}
          previous_tag: $(head -2 version.txt | tail -1)
          exclude: |
            ^Merge pull request .*
      -
        name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: build/
      -
        name: "Create release"
        uses: softprops/action-gh-release@master
        with:
          name: $(head -1 version.txt)
          tag_name: $(head -1 version.txt)
          body: ${{ steps.changelog.outputs.changelog }}
          prerelease: $(tail -1 version.txt)
          target_commitish: ${{ github.sha }}
          draft: false
          files: ./build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Remove tag if failure
        if: ${{ failure() }}
        uses: actions/github-script@v4
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/$(head -1 version.txt)",
            })
