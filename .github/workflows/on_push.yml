on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "**"

env:
  GO_VERSION: "1.16"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - 
        name: "Checkout"
        uses: actions/checkout@v2
      - 
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - 
        name: "Pull dependencies"
        run: go mod vendor
      - 
        name: "Unit tests"
        run: make test
      - 
        name: "Linter"
        run: make lint

  version:
    name: Version
    concurrency: tagging
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    needs: [test]
    outputs:
      semver_tag: ${{ steps.semver-tag.outputs.semver_tag }}
      ancestor_tag: ${{ steps.semver-tag.outputs.ancestor_tag }}
      is_prerelease: ${{ steps.semver-tag.outputs.is_prerelease }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Calculate semver tag
        id: semver-tag
        uses: wakatime/semver-action@v1.3.2
        with:
          debug: true
      - name: Create tag
        uses: actions/github-script@v4
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.semver-tag.outputs.semver_tag }}",
              sha: context.sha
            })
      - 
        name: Remove tag if failure
        if: ${{ failure() }}
        uses: actions/github-script@v4
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.semver-tag.outputs.semver_tag }}",
            })
  
  build:
    name: Build
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    needs: [version]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Setup go
        uses: actions/setup-go@master
        with:
          go-version: "1.16"
      -
        name: Build binaries
        shell: bash
        env:
          VERSION: ${{ needs.version.outputs.semver_tag }}
        run: make build-all
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: build/
      - 
        name: Remove tag if failure
        if: ${{ failure() }}
        uses: actions/github-script@v4
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ needs.version.outputs.semver_tag }}",
            })

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [version, build]
    steps:
      -
        name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        if: ${{ github.ref == 'refs/heads/develop' }}
        name: Changelog for develop
        uses: gandarez/changelog-action@v1.0.4
        id: changelog
        with:
          current_tag: ${{ github.sha }}
          previous_tag: ${{ needs.version.outputs.ancestor_tag }}
          exclude: |
            ^Merge pull request .*
      -
        if: ${{ github.ref == 'refs/heads/master' }}
        name: Changelog for master (stable version)
        uses: 8BitJonny/gh-get-current-pr@1.1.0
        id: pr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - 
        if: ${{ github.ref == 'refs/heads/master' }}
        name: Prepare changelog
        id: changelog-pr
        shell: bash
        run: |
          body="${{ fromJson(steps.pr.outputs.pr).body }}"
          body="$(awk 'f;/Changelog:/{f=1}' <<< $body)"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          body="## Changelog%0A$body"
          echo "::set-output name=changelog::$body"
      -
        name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: build/
      -
        name: "Create release"
        uses: softprops/action-gh-release@master
        with:
          name: ${{ needs.version.outputs.semver_tag }}
          tag_name: ${{ needs.version.outputs.semver_tag }}
          body: ${{ steps.changelog.outputs.changelog || steps.changelog-pr.outputs.changelog }}
          prerelease: ${{ needs.version.outputs.is_prerelease }}
          target_commitish: ${{ github.sha }}
          draft: false
          files: ./build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Remove tag if failure
        if: ${{ failure() }}
        uses: actions/github-script@v4
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ needs.version.outputs.semver_tag }}",
            })
      -
        name: "Slack notification"
        uses: 8398a7/action-slack@v3
        if: ${{ success() }}
        with:
          status: custom
          fields: message
          custom_payload: |
            {
              username: 'WakaTime Bot',
              icon_emoji: ':mega:',
              blocks: [
                {
                  type: 'section',
                  text: : {
                    type: 'mrkdwn',
                    text: `New <https://github.com/wakatime/wakatime-cli|wakatime-cli> version <https://github.com/wakatime/wakatime-cli/releases/tag/${{ needs.version.outputs.semver_tag }}|${{ needs.version.outputs.semver_tag }}> released`
                  }
                },
                {
                  type: 'context',
                  elements: [
                    {
                      type: 'mrkdwn',
                      text: `${{ steps.changelog.outputs.changelog || steps.changelog-pr.outputs.changelog }}`
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
